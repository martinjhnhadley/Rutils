create <- format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d")
mod <- format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d")
fDir <- file.info(x[1])$isdir
}else{ # all subsequent loops append df
name <- rbind(name, x[i])
type <- rbind(type, file_ext(x[i]))
size <- rbind(size, as.numeric(round(file.size(x[i])/1048576, 2)))
create <- rbind(create , format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d"))
mod <- rbind(mod, format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d"))
fDir <- rbind(fDir, file.info(x[i])$isdir)
}
}
# MAKE DF
df <- cbind(name, type, size, create, mod, fDir)
df <- data.frame(df, stringsAsFactors = F, row.names = 1:length(x))
colnames(df) <- c("Name","Type", "Size", "Created", "LastModified", "Dir")
df$Size <- as.numeric(df$Size)
# load message
cat(paste0("\nHere's what I found in your directory: \n",
"\tFile(s): ",sum(df$Type !="----"), "\t", "Total Size (MB): ", ifelse(sum(df$Size)==0,"< 0.5 MB", sum(df$Size != "< 0.5 MB")),
"\tSub Directories: ", sum(df$Dir == T),
"\n\n",
"Overview (i.e., pwd):\n\n"))
# recode
df$Type[df$Type==""] <- "----"
df$Size[df$Size == 0] <- "< 0.5 MB"
# sorting & print
if(sort == "name"){
df <- df[order(df$Name),]
return(df[,c(1:5)])
}
else if(sort == "type"){
df <- df[order(df$Type),]
return(df[,c(1:5)])
}
else if(sort == "size"){
df <- df[order(df$Size),]
return(df[,c(1:5)])
}
else if(sort == "created"){
df <- df[order(df$Size),]
return(df[,c(1:5)])
}
else if(sort == "modified"){
df <- df[order(df$Size),]
return(df[,c(1:5)])
}
cat("\n")
# BUILD SUB DIRECTORIES DF---------------------------
subDF <- subset(df, df$Dir == TRUE)
# for the total number of subdirectories
#â„¢subNum = 0
for(i in 1:length(subDF$Name)){
cat("\n")
return(subDF$Name[i])
}
}
get.dirInfo()
#===============================================================================
# FUNCTION: Get file/directory size in MBs - default is dir()
#===============================================================================
get.dirInfo <- function(x = dir(), sort = "name"){
# load package
require(tools, quietly = T)
# BUILD MAIN DIRECTORIES DF------------------------------------
for (i in 1:length(x)){
if(i == 1){ #first iteration: initiate df
name <- as.character(x[i])
type <- file_ext(x[i])
size <- as.numeric(round(file.size(x[i]) / 1048576, 2))
create <- format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d")
mod <- format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d")
fDir <- file.info(x[1])$isdir
}else{ # all subsequent loops append df
name <- rbind(name, x[i])
type <- rbind(type, file_ext(x[i]))
size <- rbind(size, as.numeric(round(file.size(x[i])/1048576, 2)))
create <- rbind(create , format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d"))
mod <- rbind(mod, format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d"))
fDir <- rbind(fDir, file.info(x[i])$isdir)
}
}
# MAKE DF
df <- cbind(name, type, size, create, mod, fDir)
df <- data.frame(df, stringsAsFactors = F, row.names = 1:length(x))
colnames(df) <- c("Name","Type", "Size", "Created", "LastModified", "Dir")
df$Size <- as.numeric(df$Size)
# load message
cat(paste0("\nHere's what I found in your directory: \n",
"\tFile(s): ",sum(df$Type !="----"), "\t", "Total Size (MB): ", ifelse(sum(df$Size)==0,"< 0.5 MB", sum(df$Size != "< 0.5 MB")),
"\tSub Directories: ", sum(df$Dir == T),
"\n\n",
"Overview (i.e., pwd):\n\n"))
# recode
df$Type[df$Type==""] <- "----"
df$Size[df$Size == 0] <- "< 0.5 MB"
# sorting & print
if(sort == "name"){
df <- df[order(df$Name),]
}
else if(sort == "type"){
df[order(df$Type),]
}
else if(sort == "size"){
df <- df[order(df$Size),]
}
else if(sort == "created"){
df <- df[order(df$Size),]
}
else if(sort == "modified"){
df <- df[order(df$Size),]
}
# print
df
# BUILD SUB DIRECTORIES DF---------------------------
subDF <- subset(df, df$Dir == TRUE)
# for the total number of subdirectories
#â„¢subNum = 0
for(i in 1:length(subDF$Name)){
cat("\n")
return(subDF$Name[i])
}
}
get.dirInfo()
#===============================================================================
# FUNCTION: Get file/directory size in MBs - default is dir()
#===============================================================================
get.dirInfo <- function(x = dir(), sort = "name"){
# load package
require(tools, quietly = T)
# BUILD MAIN DIRECTORIES DF------------------------------------
for (i in 1:length(x)){
if(i == 1){ #first iteration: initiate df
name <- as.character(x[i])
type <- file_ext(x[i])
size <- as.numeric(round(file.size(x[i]) / 1048576, 2))
create <- format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d")
mod <- format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d")
fDir <- file.info(x[1])$isdir
}else{ # all subsequent loops append df
name <- rbind(name, x[i])
type <- rbind(type, file_ext(x[i]))
size <- rbind(size, as.numeric(round(file.size(x[i])/1048576, 2)))
create <- rbind(create , format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d"))
mod <- rbind(mod, format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d"))
fDir <- rbind(fDir, file.info(x[i])$isdir)
}
}
# MAKE DF
df <- cbind(name, type, size, create, mod, fDir)
df <- data.frame(df, stringsAsFactors = F, row.names = 1:length(x))
colnames(df) <- c("Name","Type", "Size", "Created", "LastModified", "Dir")
df$Size <- as.numeric(df$Size)
# load message
cat(paste0("\nHere's what I found in your directory: \n",
"\tFile(s): ",sum(df$Type !="----"), "\t", "Total Size (MB): ", ifelse(sum(df$Size)==0,"< 0.5 MB", sum(df$Size != "< 0.5 MB")),
"\tSub Directories: ", sum(df$Dir == T),
"\n\n",
"Overview (i.e., pwd):\n\n"))
# recode
df$Type[df$Type==""] <- "----"
df$Size[df$Size == 0] <- "< 0.5 MB"
# sorting & print
if(sort == "name"){
df <- df[order(df$Name),]
}
else if(sort == "type"){
df[order(df$Type),]
}
else if(sort == "size"){
df <- df[order(df$Size),]
}
else if(sort == "created"){
df <- df[order(df$Size),]
}
else if(sort == "modified"){
df <- df[order(df$Size),]
}
# print
return(df)
# BUILD SUB DIRECTORIES DF---------------------------
subDF <- subset(df, df$Dir == TRUE)
# for the total number of subdirectories
#â„¢subNum = 0
for(i in 1:length(subDF$Name)){
cat("\n")
return(subDF$Name[i])
}
}
get.dirInfo()
#===============================================================================
# FUNCTION: Get file/directory size in MBs - default is dir()
#===============================================================================
get.dirInfo <- function(x = dir(), sort = "name"){
# load package
require(tools, quietly = T)
# BUILD MAIN DIRECTORIES DF------------------------------------
for (i in 1:length(x)){
if(i == 1){ #first iteration: initiate df
name <- as.character(x[i])
type <- file_ext(x[i])
size <- as.numeric(round(file.size(x[i]) / 1048576, 2))
create <- format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d")
mod <- format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d")
fDir <- file.info(x[1])$isdir
}else{ # all subsequent loops append df
name <- rbind(name, x[i])
type <- rbind(type, file_ext(x[i]))
size <- rbind(size, as.numeric(round(file.size(x[i])/1048576, 2)))
create <- rbind(create , format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d"))
mod <- rbind(mod, format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d"))
fDir <- rbind(fDir, file.info(x[i])$isdir)
}
}
# MAKE DF
df <- cbind(name, type, size, create, mod, fDir)
df <- data.frame(df, stringsAsFactors = F, row.names = 1:length(x))
colnames(df) <- c("Name","Type", "Size", "Created", "LastModified", "Dir")
df$Size <- as.numeric(df$Size)
# load message
cat(paste0("\nHere's what I found in your directory: \n",
"\tFile(s): ",sum(df$Type !="----"), "\t", "Total Size (MB): ", ifelse(sum(df$Size)==0,"< 0.5 MB", sum(df$Size != "< 0.5 MB")),
"\tSub Directories: ", sum(df$Dir == T),
"\n\n",
"Overview (i.e., pwd):\n\n"))
# recode
df$Type[df$Type==""] <- "----"
df$Size[df$Size == 0] <- "< 0.5 MB"
# sorting & print
if(sort == "name"){
df[order(df$Name),]
}
else if(sort == "type"){
df[order(df$Type),]
}
else if(sort == "size"){
df[order(df$Size),]
}
else if(sort == "created"){
df[order(df$Size),]
}
else if(sort == "modified"){
df[order(df$Size),]
}
# BUILD SUB DIRECTORIES DF---------------------------
subDF <- subset(df, df$Dir == TRUE)
# for the total number of subdirectories
#â„¢subNum = 0
for(i in 1:length(subDF$Name)){
cat("\n")
return(subDF$Name[i])
}
}
get.dir
get.dirInfo()
#===============================================================================
# FUNCTION: Get file/directory size in MBs - default is dir()
#===============================================================================
get.dirInfo <- function(x = dir(), sort = "name"){
# load package
require(tools, quietly = T)
# BUILD MAIN DIRECTORIES DF------------------------------------
for (i in 1:length(x)){
if(i == 1){ #first iteration: initiate df
name <- as.character(x[i])
type <- file_ext(x[i])
size <- as.numeric(round(file.size(x[i]) / 1048576, 2))
create <- format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d")
mod <- format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d")
fDir <- file.info(x[1])$isdir
}else{ # all subsequent loops append df
name <- rbind(name, x[i])
type <- rbind(type, file_ext(x[i]))
size <- rbind(size, as.numeric(round(file.size(x[i])/1048576, 2)))
create <- rbind(create , format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d"))
mod <- rbind(mod, format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d"))
fDir <- rbind(fDir, file.info(x[i])$isdir)
}
}
# MAKE DF
df <- cbind(name, type, size, create, mod, fDir)
df <- data.frame(df, stringsAsFactors = F, row.names = 1:length(x))
colnames(df) <- c("Name","Type", "Size", "Created", "LastModified", "Dir")
df$Size <- as.numeric(df$Size)
# load message
cat(paste0("\nHere's what I found in your directory: \n",
"\tFile(s): ",sum(df$Type !="----"), "\t", "Total Size (MB): ", ifelse(sum(df$Size)==0,"< 0.5 MB", sum(df$Size != "< 0.5 MB")),
"\tSub Directories: ", sum(df$Dir == T),
"\n\n",
"Overview (i.e., pwd):\n\n"))
# recode
df$Type[df$Type==""] <- "----"
df$Size[df$Size == 0] <- "< 0.5 MB"
# sorting & print
if(sort == "name"){
df <- df[order(df$Name),]
}
else if(sort == "type"){
df <- df[order(df$Type),]
}
else if(sort == "size"){
df <- df[order(df$Size),]
}
else if(sort == "created"){
df <- df[order(df$Size),]
}
else if(sort == "modified"){
df <- df[order(df$Size),]
}
# print
return(df)
# BUILD SUB DIRECTORIES DF---------------------------
subDF <- subset(df, df$Dir == TRUE)
# for the total number of subdirectories
#â„¢subNum = 0
for(i in 1:length(subDF$Name)){
cat("\n")
return(subDF$Name[i])
}
}
get.dirInfo()
#===============================================================================
# FUNCTION: Get file/directory size in MBs - default is dir()
#===============================================================================
get.dirInfo <- function(x = dir(), sort = "name"){
# load package
require(tools, quietly = T)
# BUILD MAIN DIRECTORIES DF------------------------------------
for (i in 1:length(x)){
if(i == 1){ #first iteration: initiate df
name <- as.character(x[i])
type <- file_ext(x[i])
size <- as.numeric(round(file.size(x[i]) / 1048576, 2))
create <- format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d")
mod <- format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d")
fDir <- file.info(x[1])$isdir
}else{ # all subsequent loops append df
name <- rbind(name, x[i])
type <- rbind(type, file_ext(x[i]))
size <- rbind(size, as.numeric(round(file.size(x[i])/1048576, 2)))
create <- rbind(create , format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d"))
mod <- rbind(mod, format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d"))
fDir <- rbind(fDir, file.info(x[i])$isdir)
}
}
# MAKE DF
df <- cbind(name, type, size, create, mod, fDir)
df <- data.frame(df, stringsAsFactors = F, row.names = 1:length(x))
colnames(df) <- c("Name","Type", "Size", "Created", "LastModified", "Dir")
df$Size <- as.numeric(df$Size)
# load message
cat(paste0("\nHere's what I found in your directory: \n",
"\tFile(s): ",sum(df$Type !="----"), "\t", "Total Size (MB): ", ifelse(sum(df$Size)==0,"< 0.5 MB", sum(df$Size != "< 0.5 MB")),
"\tSub Directories: ", sum(df$Dir == T),
"\n\n",
"Overview (i.e., pwd):\n\n"))
# recode
df$Type[df$Type==""] <- "----"
df$Size[df$Size == 0] <- "< 0.5 MB"
# sorting & print
if(sort == "name"){
df <- df[order(df$Name),]
}
else if(sort == "type"){
df <- df[order(df$Type),]
}
else if(sort == "size"){
df <- df[order(df$Size),]
}
else if(sort == "created"){
df <- df[order(df$Size),]
}
else if(sort == "modified"){
df <- df[order(df$Size),]
}
# print
return(df)
# BUILD SUB DIRECTORIES DF---------------------------
subDF <- subset(df, df$Dir == TRUE)
# for the total number of subdirectories
#â„¢subNum = 0
for(i in 1:length(subDF$Name)){
cat("\n")
cat(subDF$Name[i])
}
}
get.fir
get.dirInfo()
#===============================================================================
# FUNCTION: Get file/directory size in MBs - default is dir()
#===============================================================================
get.dirInfo <- function(x = dir(), sort = "name"){
# load package
require(tools, quietly = T)
# BUILD MAIN DIRECTORIES DF------------------------------------
for (i in 1:length(x)){
if(i == 1){ #first iteration: initiate df
name <- as.character(x[i])
type <- file_ext(x[i])
size <- as.numeric(round(file.size(x[i]) / 1048576, 2))
create <- format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d")
mod <- format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d")
fDir <- file.info(x[1])$isdir
}else{ # all subsequent loops append df
name <- rbind(name, x[i])
type <- rbind(type, file_ext(x[i]))
size <- rbind(size, as.numeric(round(file.size(x[i])/1048576, 2)))
create <- rbind(create , format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d"))
mod <- rbind(mod, format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d"))
fDir <- rbind(fDir, file.info(x[i])$isdir)
}
}
# MAKE DF
df <- cbind(name, type, size, create, mod, fDir)
df <- data.frame(df, stringsAsFactors = F, row.names = 1:length(x))
colnames(df) <- c("Name","Type", "Size", "Created", "LastModified", "Dir")
df$Size <- as.numeric(df$Size)
# load message
cat(paste0("\nHere's what I found in your directory: \n",
"\tFile(s): ",sum(df$Type !="----"), "\t", "Total Size (MB): ", ifelse(sum(df$Size)==0,"< 0.5 MB", sum(df$Size != "< 0.5 MB")),
"\tSub Directories: ", sum(df$Dir == T),
"\n\n",
"Overview (i.e., pwd):\n\n"))
# recode
df$Type[df$Type==""] <- "----"
df$Size[df$Size == 0] <- "< 0.5 MB"
# sorting & print
if(sort == "name"){
df <- df[order(df$Name),]
}
else if(sort == "type"){
df <- df[order(df$Type),]
}
else if(sort == "size"){
df <- df[order(df$Size),]
}
else if(sort == "created"){
df <- df[order(df$Size),]
}
else if(sort == "modified"){
df <- df[order(df$Size),]
}
# print
return(df)
cat("\n\n")
}
get.dirInfo()
#===============================================================================
# FUNCTION: Get file/directory size in MBs - default is dir()
#===============================================================================
get.dirInfo <- function(x = dir(), sort = "name"){
# load package
require(tools, quietly = T)
# BUILD MAIN DIRECTORIES DF------------------------------------
for (i in 1:length(x)){
if(i == 1){ #first iteration: initiate df
name <- as.character(x[i])
type <- file_ext(x[i])
size <- as.numeric(round(file.size(x[i]) / 1048576, 2))
create <- format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d")
mod <- format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d")
fDir <- file.info(x[1])$isdir
}else{ # all subsequent loops append df
name <- rbind(name, x[i])
type <- rbind(type, file_ext(x[i]))
size <- rbind(size, as.numeric(round(file.size(x[i])/1048576, 2)))
create <- rbind(create , format(as.Date(file.info(x[i])$ctime),"%Y-%m-%d"))
mod <- rbind(mod, format(as.Date(file.info(x[i])$mtime),"%Y-%m-%d"))
fDir <- rbind(fDir, file.info(x[i])$isdir)
}
}
# MAKE DF
df <- cbind(name, type, size, create, mod, fDir)
df <- data.frame(df, stringsAsFactors = F, row.names = 1:length(x))
colnames(df) <- c("Name","Type", "Size", "Created", "LastModified", "Dir")
df$Size <- as.numeric(df$Size)
# load message
cat(paste0("\nHere's what I found in your directory: \n",
"\tFile(s): ",sum(df$Type !="----"), "\t", "Total Size (MB): ", ifelse(sum(df$Size)==0,"< 0.5 MB", sum(df$Size != "< 0.5 MB")),
"\tSub Directories: ", sum(df$Dir == T),
"\n\n",
"Overview (i.e., pwd):\n\n"))
# recode
df$Type[df$Type==""] <- "----"
df$Size[df$Size == 0] <- "< 0.5 MB"
# sorting & print
if(sort == "name"){
df <- df[order(df$Name),]
}
else if(sort == "type"){
df <- df[order(df$Type),]
}
else if(sort == "size"){
df <- df[order(df$Size),]
}
else if(sort == "created"){
df <- df[order(df$Size),]
}
else if(sort == "modified"){
df <- df[order(df$Size),]
}
# print
return(df)
}
get.dirInfo("functions/")
setwd("functions/")
getwd()
get.dirInfo()
x <- get.dirInfo()
x
x$Name
x

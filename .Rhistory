# TEXT----------------
if(file_type == "ui"){
# header
text <- paste0("# ================", "\n",
"# Shiny: ui.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyUI(fluidPage(", "\n",
"\ttheme = shinytheme('journal'), # set theme", "\n",
"\ttitle = 'myshinyapp', # set title", "\n",
"# INSERT BODY HERE", "\n",
"\n",
"\n",
"\n",
")) # END UI")
}
else if(file_type == "server"){
text <- paste0("# ================", "\n",
"# Shiny: server.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyServer(function(input,output, session){","\n",
"\n",
"\n",
"}) # END SERVER")
}
else if(file_type == "global"){
text <- paste0("# ================", "\n",
"# Shiny: global.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"# LOAD PACKAGES",
"\n",
"\n",
"\n",
"# LOAD FUNCTIONS",
"\n",
"\n",
"\n",
"# LOAD DATA")
}
# OUTPUT
write(text, file = file_path, append = T)
}
file.create("~/temp/test.R")
file.rename("~/temp/test.R", "~/temp/ui.R")
file.create("~/temp/server.R")
file.create("~/temp/global.R")
make_my_text_shiny("~/temp/ui.R",file_type = "ui")
## function: create shiny directory and make required files
make_it_shiny <- function(directory_name = "myshinyapp", default_directory = "~/Dropbox/Programming/R/R_Shiny/"){
#  set dir_path
dir_path = paste0(default_directory, directory_name)
# check to see if dir_path exists
if(dir.exists(dir_path)){
warning("Directory already exists. Appending the directory name slightly.", immediate. = T)
Sys.sleep(1)
dir_path = paste0(dir_path,sample(1:99,size = 1))
}
# mkdir main dir
dir.create(dir_path)
# touch: ui, server, global
file.create(paste0(dir_path, "/","ui.R"),showWarnings = F)
file.create(paste0(dir_path, "/", "server.R"), showWarnings = F)
file.create(paste0(dir_path, "/", "global.R"), showWarnings = F)
# mkdir: external
dir.create(paste0(dir_path,"/","external"), showWarnings = F)
# mkdir: data
dir.create(paste0(dir_path,"/","data"), showWarnings = F)
# mkdir: utilities
dir.create(paste0(dir_path,"/","utilities"), showWarnings = F)
# mkdir: www
dir.create(paste0(dir_path,"/","www"), showWarnings = F)
# touch /www/style.css
file.create(paste0(dir_path,"/","www","/", "style.css"), showWarnings = F)
# end message
cat(paste0("New shiny project created! \nYou can find it here: ", dir_path))
}
make_my_text_shiny <- function(file_path, file_type){
# TEXT----------------
if(file_type == "ui"){
# header
text <- paste0("# ================", "\n",
"# Shiny: ui.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyUI(fluidPage(", "\n",
"\ttheme = shinytheme('journal'), # set theme", "\n",
"\ttitle = 'myshinyapp', # set title", "\n",
"\n",
"\t# INSERT BODY HERE", "\n",
"\n",
"\n",
"\n",
")) # END UI")
}
else if(file_type == "server"){
text <- paste0("# ================", "\n",
"# Shiny: server.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyServer(function(input,output, session){","\n",
"\n",
"\n",
"}) # END SERVER")
}
else if(file_type == "global"){
text <- paste0("# ================", "\n",
"# Shiny: global.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"# LOAD PACKAGES",
"\n",
"\n",
"\n",
"# LOAD FUNCTIONS",
"\n",
"\n",
"\n",
"# LOAD DATA")
}
# OUTPUT
write(text, file = file_path, append = T)
}
make_my_text_shiny("~/temp/ui.R",file_type = "ui")
make_my_text_shiny("~/temp/server.R",file_type = "server")
make_my_text_shiny("~/temp/global.R",file_type = "global")
## function: create shiny directory and make required files
make_it_shiny <- function(directory_name = "myshinyapp", default_directory = "~/Dropbox/Programming/R/R_Shiny/"){
#  set dir_path
dir_path = paste0(default_directory, directory_name)
# check to see if dir_path exists
if(dir.exists(dir_path)){
warning("Directory already exists. Appending the directory name slightly.", immediate. = T)
Sys.sleep(1)
dir_path = paste0(dir_path,sample(1:99,size = 1))
}
# mkdir main dir
dir.create(dir_path)
# touch: ui, server, global
file.create(paste0(dir_path, "/","ui.R"),showWarnings = F)
file.create(paste0(dir_path, "/", "server.R"), showWarnings = F)
file.create(paste0(dir_path, "/", "global.R"), showWarnings = F)
# echo "default text" >> ...R file (ui, server, global)
make_my_text_shiny(paste0(dir_path, "/","ui.R"), file_type = "ui")
make_my_text_shiny(paste0(dir_path, "/","server.R"), file_type = "server")
make_my_text_shiny(paste0(dir_path, "/","global.R"), file_type = "global")
# mkdir: external
dir.create(paste0(dir_path,"/","external"), showWarnings = F)
# mkdir: data
dir.create(paste0(dir_path,"/","data"), showWarnings = F)
# mkdir: utilities
dir.create(paste0(dir_path,"/","utilities"), showWarnings = F)
# mkdir: www
dir.create(paste0(dir_path,"/","www"), showWarnings = F)
# touch /www/style.css
file.create(paste0(dir_path,"/","www","/", "style.css"), showWarnings = F)
# end message
cat(paste0("New shiny project created! \nYou can find it here: ", dir_path))
}
make_my_text_shiny <- function(file_path, file_type){
# TEXT----------------
if(file_type == "ui"){
# header
text <- paste0("# ================", "\n",
"# Shiny: ui.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyUI(fluidPage(", "\n",
"\ttheme = shinytheme('journal'), # set theme", "\n",
"\ttitle = 'myshinyapp', # set title", "\n",
"\n",
"\t# INSERT BODY HERE", "\n",
"\n",
"\n",
"\n",
")) # END UI")
}
else if(file_type == "server"){
text <- paste0("# ================", "\n",
"# Shiny: server.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyServer(function(input,output, session){","\n",
"\n",
"\n",
"}) # END SERVER")
}
else if(file_type == "global"){
text <- paste0("# ================", "\n",
"# Shiny: global.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"# LOAD PACKAGES",
"\n",
"\n",
"\n",
"# LOAD FUNCTIONS",
"\n",
"\n",
"\n",
"# LOAD DATA")
}
# OUTPUT
write(text, file = file_path, append = T)
}
make_it_shiny()
## function: create shiny directory and make required files
make_it_shiny <- function(directory_name = "myshinyapp", default_directory = "~/Dropbox/Programming/R/R_Shiny/"){
#  set dir_path
dir_path = paste0(default_directory, directory_name)
# check to see if dir_path exists
if(dir.exists(dir_path)){
warning("Directory already exists. Appending the directory name slightly.", immediate. = T)
Sys.sleep(1)
dir_path = paste0(dir_path,sample(1:99,size = 1))
}
# mkdir main dir
dir.create(dir_path)
# touch: ui, server, global
file.create(paste0(dir_path, "/","ui.R"),showWarnings = F)
file.create(paste0(dir_path, "/", "server.R"), showWarnings = F)
file.create(paste0(dir_path, "/", "global.R"), showWarnings = F)
# touch: google-analytics.js
file.create(paste0(dir_path,"/","google-analytics.js"),showWarnings = F)
# echo "default text" >> ...R file (ui, server, global)
make_my_text_shiny(paste0(dir_path, "/","ui.R"), file_type = "ui")
make_my_text_shiny(paste0(dir_path, "/","server.R"), file_type = "server")
make_my_text_shiny(paste0(dir_path, "/","global.R"), file_type = "global")
# mkdir: external
dir.create(paste0(dir_path,"/","external"), showWarnings = F)
# mkdir: data
dir.create(paste0(dir_path,"/","data"), showWarnings = F)
# mkdir: utilities
dir.create(paste0(dir_path,"/","utilities"), showWarnings = F)
# mkdir: www
dir.create(paste0(dir_path,"/","www"), showWarnings = F)
# touch /www/style.css
file.create(paste0(dir_path,"/","www","/", "style.css"), showWarnings = F)
# end message
cat(paste0("New shiny project created! \nYou can find it here: ", dir_path))
}
make_my_text_shiny <- function(file_path, file_type){
# TEXT----------------
if(file_type == "ui"){
# header
text <- paste0("# ================", "\n",
"# Shiny: ui.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyUI(fluidPage(", "\n",
"\t# SET MAIN PARAMETERS--------------------------------", "\n",
"\ttheme = shinytheme('journal'), # set theme", "\n",
"\ttitle = 'myshinyapp', # set title", "\n",
"\ttags$head(includeScript('google-analytics.js')), # include GA tracker", "\n",
"\ttags$link(rel='stylesheet', type='text/css', href='style.css'), # css file","\n",
"\n",
"\t# UI-------- ----------------------------------------", "\n",
"\n",
"\n",
"\n",
")) # END UI")
}
else if(file_type == "server"){
text <- paste0("# ================", "\n",
"# Shiny: server.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyServer(function(input,output, session){","\n",
"\n",
"\n",
"}) # END SERVER")
}
else if(file_type == "global"){
text <- paste0("# ================", "\n",
"# Shiny: global.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"# LOAD PACKAGES",
"library(shiny, quietly = T)",
"library(shinythemes,quietly = T)",
"library(shinyjs,quietly = T)",
"library(shinyBS,quietly = T)",
"\n",
"# LOAD FUNCTIONS",
"\n",
"\n",
"\n",
"# LOAD DATA")
}
# OUTPUT
write(text, file = file_path, append = T)
}
make_it_shiny()
## function: create shiny directory and make required files
make_it_shiny <- function(directory_name = "myshinyapp", default_directory = "~/Dropbox/Programming/R/R_Shiny/"){
#  set dir_path
dir_path = paste0(default_directory, directory_name)
# check to see if dir_path exists
if(dir.exists(dir_path)){
warning("Directory already exists. Appending the directory name slightly.", immediate. = T)
Sys.sleep(1)
dir_path = paste0(dir_path,sample(1:99,size = 1))
}
# mkdir main dir
dir.create(dir_path)
# touch: ui, server, global
file.create(paste0(dir_path, "/","ui.R"),showWarnings = F)
file.create(paste0(dir_path, "/", "server.R"), showWarnings = F)
file.create(paste0(dir_path, "/", "global.R"), showWarnings = F)
# touch: google-analytics.js
file.create(paste0(dir_path,"/","google-analytics.js"),showWarnings = F)
# echo "default text" >> ...R file (ui, server, global)
make_my_text_shiny(paste0(dir_path, "/","ui.R"), file_type = "ui")
make_my_text_shiny(paste0(dir_path, "/","server.R"), file_type = "server")
make_my_text_shiny(paste0(dir_path, "/","global.R"), file_type = "global")
# mkdir: external
dir.create(paste0(dir_path,"/","external"), showWarnings = F)
# mkdir: data
dir.create(paste0(dir_path,"/","data"), showWarnings = F)
# mkdir: utilities
dir.create(paste0(dir_path,"/","utilities"), showWarnings = F)
# mkdir: www
dir.create(paste0(dir_path,"/","www"), showWarnings = F)
# touch /www/style.css
file.create(paste0(dir_path,"/","www","/", "style.css"), showWarnings = F)
# end message
cat(paste0("New shiny project created! \nYou can find it here: ", dir_path))
}
make_my_text_shiny <- function(file_path, file_type){
# TEXT----------------
if(file_type == "ui"){
# header
text <- paste0("# ================", "\n",
"# Shiny: ui.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyUI(fluidPage(", "\n",
"\t# MAIN PARAMETERS-----------------------------------", "\n",
"\n",
"\ttheme = shinytheme('journal'), # set theme", "\n",
"\ttitle = 'myshinyapp', # set title", "\n",
"\ttags$head(includeScript('google-analytics.js')), # include GA tracker", "\n",
"\ttags$link(rel='stylesheet', type='text/css', href='style.css'), # css file","\n",
"\n",
"\t# UI-------------------------------------------------", "\n",
"\n",
"\n",
"\n",
")) # END UI")
}
else if(file_type == "server"){
text <- paste0("# ================", "\n",
"# Shiny: server.R     ", "\n",
"# ================", "\n",
"\n",
"shinyServer(function(input,output, session){","\n",
"\n",
"\n",
"}) # END SERVER")
}
else if(file_type == "global"){
text <- paste0("# ================", "\n",
"# Shiny: global.R     ", "\n",
"# ================", "\n",
"\n",
"# LOAD PACKAGES","\n",
"library(shiny, quietly = T)","\n",
"library(shinythemes,quietly = T)","\n",
"library(shinyjs,quietly = T)","\n",
"library(shinyBS,quietly = T)","\n",
"\n",
"# LOAD FUNCTIONS","\n",
"\n",
"\n",
"\n",
"# LOAD DATA")
}
# OUTPUT
write(text, file = file_path, append = T)
}
make_it_shiny()
install.packages("rbenchmark", dependencies = T)
library(rbenchmark)
benchmark(make_it_shiny())
benchmark(make_it_shiny(), replications = 1)
## function: create shiny directory and make required files
make_it_shiny <- function(directory_name = "myshinyapp", default_directory = "~/Dropbox/Programming/R/R_Shiny/"){
#  set dir_path
dir_path = paste0(default_directory, directory_name)
# check to see if dir_path exists
if(dir.exists(dir_path)){
warning("Directory already exists. Appending the directory name slightly.", immediate. = T)
Sys.sleep(1)
dir_path = paste0(dir_path,sample(1:99,size = 1))
}
# mkdir main dir
dir.create(dir_path)
# touch: ui, server, global
file.create(paste0(dir_path, "/","ui.R"),showWarnings = F)
file.create(paste0(dir_path, "/", "server.R"), showWarnings = F)
file.create(paste0(dir_path, "/", "global.R"), showWarnings = F)
# touch: google-analytics.js
file.create(paste0(dir_path,"/","google-analytics.js"),showWarnings = F)
# echo "default text" >> ...R file (ui, server, global)
make_my_text_shiny(paste0(dir_path, "/","ui.R"), file_type = "ui")
make_my_text_shiny(paste0(dir_path, "/","server.R"), file_type = "server")
make_my_text_shiny(paste0(dir_path, "/","global.R"), file_type = "global")
# mkdir: external
dir.create(paste0(dir_path,"/","external"), showWarnings = F)
# mkdir: data
dir.create(paste0(dir_path,"/","data"), showWarnings = F)
# mkdir: utilities
dir.create(paste0(dir_path,"/","utilities"), showWarnings = F)
# mkdir: www
dir.create(paste0(dir_path,"/","www"), showWarnings = F)
# touch /www/style.css
file.create(paste0(dir_path,"/","www","/", "style.css"), showWarnings = F)
# end message
cat(paste0("New shiny project created! \nYou can find it here: ", dir_path,"\n\n"))
}
make_my_text_shiny <- function(file_path, file_type){
# TEXT----------------
if(file_type == "ui"){
# header
text <- paste0("# ================", "\n",
"# Shiny: ui.R     ", "\n",
"# ================", "\n",
"\n",
"\n",
"shinyUI(fluidPage(", "\n",
"\t# MAIN PARAMETERS-----------------------------------", "\n",
"\n",
"\ttheme = shinytheme('journal'), # set theme", "\n",
"\ttitle = 'myshinyapp', # set title", "\n",
"\ttags$head(includeScript('google-analytics.js')), # include GA tracker", "\n",
"\ttags$link(rel='stylesheet', type='text/css', href='style.css'), # css file","\n",
"\n",
"\t# UI-------------------------------------------------", "\n",
"\n",
"\n",
"\n",
")) # END UI")
}
else if(file_type == "server"){
text <- paste0("# ================", "\n",
"# Shiny: server.R     ", "\n",
"# ================", "\n",
"\n",
"shinyServer(function(input,output, session){","\n",
"\n",
"\n",
"}) # END SERVER")
}
else if(file_type == "global"){
text <- paste0("# ================", "\n",
"# Shiny: global.R     ", "\n",
"# ================", "\n",
"\n",
"# LOAD PACKAGES","\n",
"library(shiny, quietly = T)","\n",
"library(shinythemes,quietly = T)","\n",
"library(shinyjs,quietly = T)","\n",
"library(shinyBS,quietly = T)","\n",
"\n",
"# LOAD FUNCTIONS","\n",
"\n",
"\n",
"\n",
"# LOAD DATA")
}
# OUTPUT
write(text, file = file_path, append = T)
}
getwd()
benchmark(make_it_shiny(), replications = 0)
benchmark(make_it_shiny(), replications = 1)
## load functions
# ====================
# loadR
# ====================
load.utils <- function(directory = "~/Github/Rutils/functions/", sort = "name"){
# load package
require(tools, quietly = T)
# create file list
filelist <- dir(directory)
# message 1
cat(paste0("I found: ", length(filelist), " packages. Loading...\n"))
Sys.sleep(1)
# load files
for(i in 1:length(filelist)){
if(file_ext(filelist[i]) == "R"){
source(paste0(directory, filelist[i]))
}
}
# message
cat("Your functions located in '~/Github/Rutils/functions/' were loaded successfully!")
}
load.utils()
